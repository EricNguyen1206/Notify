services:
  mysql:
    image: mysql:8.0
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${VOTIFY_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${VOTIFY_MYSQL_DATABASE}
      - MYSQL_USER=${VOTIFY_MYSQL_USER}
      - MYSQL_PASSWORD=${VOTIFY_MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${VOTIFY_MYSQL_USER}", "-p${VOTIFY_MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:alpine
    env_file:
      - .env
    command: redis-server --requirepass ${VOTIFY_REDIS_PASSWORD}
    volumes:
      - redis-data:/data

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    environment:
      - MINIO_ROOT_USER=${VOTIFY_MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${VOTIFY_MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - mysql:db
    ports:
      - "${VOTIFY_PHPMYADMIN_PORT}:80"  # Using 8081 from .env
    environment:
      - PMA_HOST=mysql
      - PMA_USER=${VOTIFY_MYSQL_USER}
      - PMA_PASSWORD=${VOTIFY_MYSQL_PASSWORD}

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    env_file:
      - .env
    # Remove voting-service from depends_on since we'll run it locally
    depends_on:
      - minio

  kafka:
    image: bitnami/kafka:latest
    env_file:
      - .env
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - "9092:9092"
    depends_on:
      - redis
      - mysql

  # Comment out voting-service as it will be run locally
  # voting-service:
  #   build: ./voting-service
  #   ports:
  #     - "${VOTIFY_SERVICE_PORT}:${VOTIFY_SERVICE_PORT}"
  #   env_file:
  #     - .env
  #   environment:
  #     - VOTIFY_DB_HOST=mysql
  #     - VOTIFY_DB_PORT=3306
  #     - VOTIFY_DB_USER=${VOTIFY_MYSQL_USER}
  #     - VOTIFY_DB_PASSWORD=${VOTIFY_MYSQL_PASSWORD}
  #     - VOTIFY_DB_NAME=${VOTIFY_MYSQL_DATABASE}
  #     - VOTIFY_DB_PROTOCOL=tcp
  #     - VOTIFY_REDIS_ADDR=redis:6379
  #     - VOTIFY_MINIO_ENDPOINT=minio:9000
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #     redis:
  #       condition: service_started
  #     minio:
  #       condition: service_started
  #   healthcheck:
  #     test: ["CMD", "wget", "--spider", "-q", "http://localhost:8000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  aggregation-service:
    build: ./aggregation-service
    env_file:
      - .env
    environment:
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=${VOTIFY_REDIS_PASSWORD}
      - MYSQL_DSN=${VOTIFY_MYSQL_USER}:${VOTIFY_MYSQL_PASSWORD}@tcp(mysql:3306)/${VOTIFY_MYSQL_DATABASE}?charset=utf8mb4&parseTime=True&loc=Local
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=votes
    ports:
      - "${VOTIFY_AGGREGATION_PORT}:8080"  # Using different port from .env
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      kafka:
        condition: service_started

volumes:
  mysql-data:
  redis-data:
  minio-data:
