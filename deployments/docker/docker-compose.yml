networks:
  notify-network:
    driver: bridge

services:
  # Frontend Service (Next.js)
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: notify-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_WS_URL=ws://localhost:8080
    depends_on:
      - app
    networks:
      - notify-network
    restart: unless-stopped

  # Chat Service (Go Backend)
  app:
    build:
      context: ../../chat-service
      dockerfile: Dockerfile
    container_name: notify-chat-service
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_URL=postgres://postgres:postgres@db:5432/postgres?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - NOTIFY_JWT_SECRET=your-super-secure-jwt-secret-key-change-in-production
      - NOTIFY_HOST=0.0.0.0
      - NOTIFY_PORT=8080
    depends_on:
      - db
      - redis
    networks:
      - notify-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: notify-nginx
    ports:
      - "80:80"
    volumes:
      - ../nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - app
    networks:
      - notify-network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: notify-chat-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - notify-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: notify-chat-redis
    ports:
      - "6379:6379"
    networks:
      - notify-network
    restart: unless-stopped

volumes:
  pgdata:
