# =============================================================================
# Notify Chat Application - Environment Configuration Template
# =============================================================================
# Copy this file to .env and customize the values for your environment
# For production, ensure all secrets are properly secured

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
NODE_ENV=production
NEXT_TELEMETRY_DISABLED=1

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================
# API URL for frontend to connect to backend
# Production: Use nginx proxy (http://localhost/api)
# Development: Direct backend access (http://localhost:8080/api/v1)
NEXT_PUBLIC_API_URL=http://localhost/api

# WebSocket URL for real-time communication
# Production: Use nginx proxy (ws://localhost/ws)
# Development: Direct backend access (ws://localhost:8080/api/v1/ws)
NEXT_PUBLIC_WS_URL=ws://localhost/ws

# =============================================================================
# BACKEND CONFIGURATION
# =============================================================================
# Server configuration
NOTIFY_HOST=0.0.0.0
NOTIFY_PORT=8080

# JWT Configuration
NOTIFY_JWT_SECRET=your-super-secure-jwt-secret-key-change-this-in-production
NOTIFY_JWT_EXPIRE=24h

# CORS Configuration
ALLOWED_ORIGINS=http://localhost,http://localhost:3000,http://localhost:80

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL Database
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=notify_chat
POSTGRES_URL=postgres://postgres:postgres@db:5432/notify_chat?sslmode=disable

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Redis Cache
REDIS_URL=redis://redis:6379/0

# =============================================================================
# PRODUCTION SECURITY NOTES
# =============================================================================
# 1. Change all default passwords and secrets
# 2. Use strong, unique JWT secrets
# 3. Configure proper CORS origins for your domain
# 4. Enable SSL/HTTPS in production
# 5. Use environment-specific database credentials
# 6. Configure proper firewall rules
# 7. Regular security updates and monitoring
