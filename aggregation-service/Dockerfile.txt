FROM golang:1.19-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git make

WORKDIR /app

# Copy go mod files first for better layer caching
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build application (remove go mod init)
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s" -o /aggregation-service ./cmd/api/main.go

FROM alpine:latest

# Install runtime dependencies
RUN apk add --no-cache ca-certificates tzdata

WORKDIR /

# Copy binary from builder
COPY --from=builder /aggregation-service /aggregation-service

# Copy config files if any
COPY configs/ ./configs/

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget -qO- http://localhost:8080/health || exit 1

# Run application
CMD ["/aggregation-service"]